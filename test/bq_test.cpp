#include <gtest/gtest.h>
#include <cstdint>

extern "C" {
#include "biquad.h"
}

TEST(BiquadTest, initTest)
{
    struct bq_struct bq;

    bq_type coefs[5] = { 1, 2, 3, 4, 5 };
    bq_df1_init(&bq, coefs);
    for (size_t i = 0; i < 3; i++) {
        ASSERT_EQ(bq.coefs[i], coefs[i]);
    }
    ASSERT_EQ(bq.coefs[3], -coefs[3]);
    ASSERT_EQ(bq.coefs[4], -coefs[4]);
    for (size_t i = 0; i < 4; i++) {
        ASSERT_EQ(bq.delay_line[i], 0);
    }
}

TEST(BiquadTest, lowPassFilterTest)
{
    struct bq_struct bq;
    int32_t len = 48;
    bq_type input[48] = { 1.00000000000000000000, 0.99965643206283849587, 0.99861522520294243588, 0.99684469864428038033, 0.99429148303268666265, 0.99087968278793470134, 0.98650973335951874787, 0.98105698589052614533, 0.97437006478523524589, 0.96626905956484221427, 0.95654363193842728563, 0.94495114300654969863, 0.93121493475880356971, 0.91502293529787570581, 0.89602679919023942023, 0.87384184346536686316, 0.84804809615642595677, 0.81819283742251280866, 0.78379508190234892240, 0.74435252252236328019, 0.69935152640336706309, 0.64828083653842449863, 0.59064967959887981763, 0.52601099827643260642, 0.45399049973954680448, 0.37432211934671238973, 0.28689031523011510050, 0.19177930464930495469, 0.08932889329245349841, -0.01980410163000597898, -0.13458070850712611222, -0.25351393875586314408, -0.37460659341591207028, -0.49529876435251340983, -0.61243288439824405955, -0.72224608848531990368, -0.82040144352551336304, -0.90207100092640135625, -0.96208422235428592284, -0.99515460855531412410, -0.99619469809174554520, -0.96072430664525398925, -0.88536827123687922292, -0.76842751849182555635, -0.61049080738143535196, -0.41503442447608152044, -0.18893476784063900631, 0.05720328467695754565 };

    bq_type output[48] = { 0 };

    bq_type ref[48] = { 0.01292156453915951041, 0.03842632052192558600, 0.06325406034680562672, 0.08740384169183357255, 0.11087364760684512155, 0.13365984296078706195, 0.15575661934636386707, 0.17715542127568500996, 0.19784434769365868978, 0.21780752437130318500, 0.23702444469472100375, 0.25546927883108455637, 0.27311015434273455682, 0.28990841516403342837, 0.30581787059787429728, 0.32078405178546587351, 0.33474350011306042152, 0.34762312039253995266, 0.35933964151213759752, 0.36979923866951847078, 0.37889738425515773201, 0.38651900879922662657, 0.39253906878740668640, 0.39682363398195807935, 0.39923162219272123608, 0.39961732281437140069, 0.39783385990642661234, 0.39373774849934589648, 0.38719469076406187735, 0.37808673747474436100, 0.36632089982733118116, 0.35183923149709644962, 0.33463030482787159414, 0.31474187244332235691, 0.29229433161601531266, 0.26749439098802757497, 0.24064807926794454240, 0.21217194103506425984, 0.18260095214746491221, 0.15259138429914653745, 0.12291659687261380363, 0.09445359217615020841, 0.06815821141126372773, 0.04502716092444535717, 0.02604573605064354480, 0.01212124226196351247, 0.00400376453541346697, 0.00219811787018686644 };

    bq_type coefs[5] = { 0.01292156453915951041, 0.01292156453915951041, 0.00000000000000000000, -0.97415687092168101735, 0.00000000000000000000 };
    bq_df1_init(&bq, coefs);
    bq_df1_process(&bq, input, output, len);
    for (size_t i = 0; i < (size_t)len; i++) {
        ASSERT_NEAR(output[i], ref[i], 0.0000001);
    }
}

int main(int argc, char** argv)
{
    ::testing::InitGoogleTest(&argc, argv);
    return RUN_ALL_TESTS();
}
